class t extends class{constructor(t,e,s){this.openDelay=t,this.closeDelay=e,this.dotNetHelper=s}clearDelay(){clearTimeout(this.openTimeout),clearTimeout(this.closeTimeout)}runDelay(t,e){this.clearDelay();const s=parseInt(this[`${t}Delay`],10);this[`${t}Timeout`]=setTimeout(e||(()=>{const e={open:!0,close:!1}[t];this.setActive(e)}),s)}setActive(t){console.log("setActive: ",t,"is return:",this.isActive==t),this.isActive!=t&&(this.isActive=t,this.dotNetHelper.invokeMethodAsync("SetActive",this.isActive))}}{constructor(t,e,s,i,o,n,r,c){super(n,r,c);const a=document.querySelector(t);a&&(this.activator=a,this.disabled=e,this.openOnClick=s,this.openOnHover=i,this.openOnFocus=o,this.dotNetHelper=c)}addActivatorEvents(){if(!this.activator||this.disabled)return;this.listeners=this.genActivatorListeners();const t=Object.keys(this.listeners);for(const e of t)this.activator.addEventListener(e,this.listeners[e])}genActivatorListeners(){if(this.disabled)return{};const t={};return this.openOnHover?(t.mouseenter=t=>{console.log("mouseenter",this.isActive),this.runDelay("open")},t.mouseleave=t=>{console.log("mouseleave",this.isActive),this.runDelay("close")}):this.openOnClick&&(t.click=t=>{var e;this.activator&&this.activator.focus(),t.stopPropagation(),this.dotNetHelper.invokeMethodAsync("OnClick",{detail:(e=t).detail,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY,offsetX:e.offsetX,offsetY:e.offsetY,pageX:e.pageX,pageY:e.pageY,button:e.button,buttons:e.buttons,ctrlKey:e.ctrlKey,shiftKey:e.shiftKey,altKey:e.altKey,metaKey:e.metaKey,type:e.type}),this.setActive(!this.isActive)}),this.openOnFocus&&(t.focus=t=>{t.stopPropagation(),this.runDelay("open")},t.blur=t=>{this.runDelay("close")}),t}removeActivatorEvents(){if(!this.activator)return;const t=Object.keys(this.listeners);for(const e of t)this.activator.removeEventListener(e,this.listeners[e]);this.listeners={}}resetActivator(t,e,s){this.disabled=t,this.openOnHover=e,this.openOnFocus=s,this.removeActivatorEvents(),this.addActivatorEvents()}runDelaying(t){console.log("runDelaying",t),this.runDelay(t?"open":"close")}}function e(e,s,i,o,n,r,c,a){var l=new t(e,s,i,o,n,r,c,a);return l.addActivatorEvents(),l}export{e as init};
//# sourceMappingURL=activatable.js.map

class t extends class{constructor(t,e,s){this.openDelay=t,this.closeDelay=e,this.dotNetHelper=s}clearDelay(){clearTimeout(this.openTimeout),clearTimeout(this.closeTimeout)}runDelay(t,e){this.clearDelay();const s=parseInt(this[`${t}Delay`],10);this[`${t}Timeout`]=setTimeout(e||(()=>{const e={open:!0,close:!1}[t];this.setActive(e)}),s)}setActive(t){this.isActive!=t&&(this.isActive=t,this.dotNetHelper.invokeMethodAsync("SetActive",this.isActive))}}{constructor(t,e,s,o,i,n,c,r){super(n,c,r),console.log("activatorSelector",t);const l=document.querySelector(t);console.log("activator",l),l&&(this.activator=l),this.disabled=e,this.openOnClick=s,this.openOnHover=o,this.openOnFocus=i,this.dotNetHelper=r}resetActivator(t){console.log("resetActivator selector",t);const e=document.querySelector(t);e&&(this.activator=e),console.log("resetActivator got the activator",this.activator),this.resetActivatorEvents(this.disabled,this.openOnHover,this.openOnFocus)}addActivatorEvents(){if(!this.activator||this.disabled)return;this.activatorListeners=this.genActivatorListeners();const t=Object.keys(this.activatorListeners);for(const e of t)this.activator.addEventListener(e,this.activatorListeners[e])}genActivatorListeners(){if(this.disabled)return{};const t={};return this.openOnHover?(t.mouseenter=t=>{console.log("mouseenter",this.isActive),this.runDelay("open")},t.mouseleave=t=>{console.log("mouseleave",this.isActive),this.runDelay("close")}):this.openOnClick&&(t.click=t=>{var e;console.log(this.activator.id),this.activator&&this.activator.focus(),t.stopPropagation(),this.dotNetHelper.invokeMethodAsync("OnClick",{detail:(e=t).detail,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY,offsetX:e.offsetX,offsetY:e.offsetY,pageX:e.pageX,pageY:e.pageY,button:e.button,buttons:e.buttons,ctrlKey:e.ctrlKey,shiftKey:e.shiftKey,altKey:e.altKey,metaKey:e.metaKey,type:e.type}),this.setActive(!this.isActive)}),this.openOnFocus&&(t.focus=t=>{t.stopPropagation(),this.runDelay("open")},t.blur=t=>{this.runDelay("close")}),t}removeActivatorEvents(){if(!this.activator)return;const t=Object.keys(this.activatorListeners);for(const e of t)this.activator.removeEventListener(e,this.activatorListeners[e]);this.activatorListeners={}}resetActivatorEvents(t,e,s){console.log("resetActivatorEvents","openOnHover",e),this.disabled=t,this.openOnHover=e,this.openOnFocus=s,this.removeActivatorEvents(),this.addActivatorEvents()}runDelaying(t){console.log("runDelaying",t),this.runDelay(t?"open":"close")}registerPopup(t,e,s,o){console.log("registerPop",t),console.log("closeOnOutsideClick",e),console.log("closeOnContentClick",s);const i=document.querySelector(t);i?(this.popupElement=i,this.closeOnOutsideClick=e,this.closeOnContentClick=s,this.disableDefaultOutsideClickEvent=o,this.addPopupEvents(),this.addDocumentEvents()):console.error("popup not exists")}addPopupEvents(){if(!this.popupElement||this.disabled)return;this.popupListeners=this.genPopupListeners();const t=Object.keys(this.popupListeners);for(const e of t)this.popupElement.addEventListener(e,this.popupListeners[e])}addDocumentEvents(){if(this.disabled)return;this.documentListeners=this.genDocumentListeners();const t=Object.keys(this.documentListeners);for(const e of t)document.addEventListener(e,this.documentListeners[e],!0)}removePopupEvents(){if(!this.popupElement)return;const t=Object.keys(this.popupListeners);for(const e of t)this.popupElement.removeEventListener(e,this.popupListeners[e]);this.popupListeners={}}removeDocumentEvents(){const t=Object.keys(this.documentListeners);for(const e of t)document.removeEventListener(e,this.documentListeners[e]);this.documentListeners={}}genPopupListeners(){if(this.disabled)return;const t={};return!this.disabled&&this.openOnHover&&(t.mouseenter=t=>{console.log("content mouseenter"),this.runDelay("open")},t.mouseleave=t=>{console.log("content mouseleave"),this.runDelay("close")}),this.closeOnContentClick&&(t.click=t=>{console.log("content click",t),this.setActive(!1)}),t}genDocumentListeners(){const t={};return!this.openOnHover&&this.closeOnOutsideClick&&(t.click=t=>{this.popupElement.contains(t.target)||this.activator&&this.activator.contains(t.target)||(this.dotNetHelper.invokeMethodAsync("OnOutsideClick"),this.disableDefaultOutsideClickEvent||(console.log("outside click: set active to false"),this.setActive(!1)))}),t}resetPopupAndDocumentEvents(t,e){this.closeOnOutsideClick=t,this.closeOnContentClick=e,this.removePopupEvents(),this.removeDocumentEvents(),this.addPopupEvents(),this.addDocumentEvents()}}function e(e,s,o,i,n,c,r,l){var a=new t(e,s,o,i,n,c,r,l);return a.addActivatorEvents(),a}export{e as init};
//# sourceMappingURL=activatable.js.map

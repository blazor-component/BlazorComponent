{"version":3,"file":"activatable.js","sources":["../../../BlazorComponent.Web/src/mixins/activatable/index.ts","../../../BlazorComponent.Web/src/mixins/delayable/index.ts","../../../BlazorComponent.Web/src/events/EventType.ts"],"sourcesContent":["import { parseMouseEvent } from \"../../events/EventType\";\r\nimport { getElementSelector } from \"../../utils/helper\";\r\nimport Delayable from \"../delayable\";\r\n\r\ntype Listeners = Record<\r\n  string,\r\n  (e: MouseEvent & KeyboardEvent & FocusEvent) => void\r\n>;\r\n\r\nclass Activatable extends Delayable {\r\n  activator?: HTMLElement;\r\n  popupElement: HTMLElement;\r\n  disabled: boolean;\r\n  openOnClick: boolean;\r\n  openOnHover: boolean;\r\n  openOnFocus: boolean;\r\n\r\n  closeOnOutsideClick: boolean;\r\n  closeOnContentClick: boolean;\r\n  disableDefaultOutsideClickEvent: boolean;\r\n\r\n  isActive: boolean;\r\n  activatorListeners: Listeners;\r\n  popupListeners: Listeners;\r\n  documentListeners: Listeners;\r\n\r\n  constructor(\r\n    activatorSelector: string,\r\n    disabled: boolean,\r\n    openOnClick: boolean,\r\n    openOnHover: boolean,\r\n    openOnFocus: boolean,\r\n    openDelay: number,\r\n    closeDelay: number,\r\n    dotNetHelper: DotNet.DotNetObject\r\n  ) {\r\n    super(openDelay, closeDelay, dotNetHelper);\r\n\r\n    console.log(\"activatorSelector\", activatorSelector);\r\n    const activator = document.querySelector(activatorSelector);\r\n    console.log(\"activator\", activator);\r\n    if (activator) {\r\n      this.activator = activator as HTMLElement;\r\n    }\r\n\r\n    this.disabled = disabled;\r\n    this.openOnClick = openOnClick;\r\n    this.openOnHover = openOnHover;\r\n    this.openOnFocus = openOnFocus;\r\n    this.dotNetHelper = dotNetHelper;\r\n  }\r\n\r\n  //#region activators\r\n\r\n  resetActivator(selector: string) {\r\n    console.log(\"resetActivator selector\", selector);\r\n    const activator = document.querySelector(selector);\r\n    if (activator) {\r\n      this.activator = activator as HTMLElement;\r\n    }\r\n    console.log(\"resetActivator got the activator\", this.activator);\r\n\r\n    this.resetActivatorEvents(\r\n      this.disabled,\r\n      this.openOnHover,\r\n      this.openOnFocus\r\n    );\r\n  }\r\n\r\n  addActivatorEvents() {\r\n    if (!this.activator || this.disabled) return;\r\n\r\n    this.activatorListeners = this.genActivatorListeners();\r\n    const keys = Object.keys(this.activatorListeners);\r\n\r\n    for (const key of keys) {\r\n      this.activator.addEventListener(key, this.activatorListeners[key] as any);\r\n    }\r\n  }\r\n\r\n  genActivatorListeners() {\r\n    if (this.disabled) return {};\r\n\r\n    const listeners: Listeners = {};\r\n\r\n    if (this.openOnHover) {\r\n      listeners.mouseenter = (e: MouseEvent) => {\r\n        console.log(\"mouseenter\", this.isActive);\r\n        this.runDelay(\"open\");\r\n      };\r\n      listeners.mouseleave = (e: MouseEvent) => {\r\n        console.log(\"mouseleave\", this.isActive);\r\n        this.runDelay(\"close\");\r\n      };\r\n    } else if (this.openOnClick) {\r\n      listeners.click = (e: MouseEvent) => {\r\n        console.log(this.activator.id);\r\n        if (this.activator) this.activator.focus();\r\n\r\n        e.stopPropagation();\r\n\r\n        this.dotNetHelper.invokeMethodAsync(\"OnClick\", parseMouseEvent(e));\r\n\r\n        this.setActive(!this.isActive);\r\n      };\r\n    }\r\n\r\n    if (this.openOnFocus) {\r\n      listeners.focus = (e: FocusEvent) => {\r\n        e.stopPropagation();\r\n\r\n        this.runDelay(\"open\");\r\n      };\r\n\r\n      listeners.blur = (e: FocusEvent) => {\r\n        this.runDelay(\"close\");\r\n      };\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  removeActivatorEvents() {\r\n    if (!this.activator) return;\r\n\r\n    const keys = Object.keys(this.activatorListeners);\r\n\r\n    for (const key of keys) {\r\n      this.activator.removeEventListener(key, this.activatorListeners[key]);\r\n    }\r\n\r\n    this.activatorListeners = {};\r\n  }\r\n\r\n  resetActivatorEvents(\r\n    disabled: boolean,\r\n    openOnHover: boolean,\r\n    openOnFocus: boolean\r\n  ) {\r\n    console.log(\"resetActivatorEvents\", \"openOnHover\", openOnHover);\r\n    this.disabled = disabled;\r\n    this.openOnHover = openOnHover;\r\n    this.openOnFocus = openOnFocus;\r\n\r\n    this.removeActivatorEvents();\r\n    this.addActivatorEvents();\r\n  }\r\n\r\n  runDelaying(val: boolean) {\r\n    console.log(\"runDelaying\", val);\r\n    this.runDelay(val ? \"open\" : \"close\");\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region popups\r\n\r\n  registerPopup(\r\n    popupSelector: string,\r\n    closeOnOutsideClick: boolean,\r\n    closeOnContentClick: boolean,\r\n    disableDefaultOutsideClickEvent: boolean\r\n  ) {\r\n    console.log(\"registerPop\", popupSelector);\r\n    console.log(\"closeOnOutsideClick\", closeOnOutsideClick);\r\n    console.log(\"closeOnContentClick\", closeOnContentClick);\r\n    const popup = document.querySelector(popupSelector);\r\n    if (!popup) {\r\n      console.error(\"popup not exists\");\r\n      return;\r\n    }\r\n\r\n    this.popupElement = popup as HTMLElement;\r\n    this.closeOnOutsideClick = closeOnOutsideClick;\r\n    this.closeOnContentClick = closeOnContentClick;\r\n    this.disableDefaultOutsideClickEvent = disableDefaultOutsideClickEvent;\r\n\r\n    this.addPopupEvents();\r\n    this.addDocumentEvents();\r\n  }\r\n\r\n  addPopupEvents() {\r\n    if (!this.popupElement || this.disabled) return;\r\n\r\n    this.popupListeners = this.genPopupListeners();\r\n    const keys = Object.keys(this.popupListeners);\r\n\r\n    for (const key of keys) {\r\n      this.popupElement.addEventListener(key, this.popupListeners[key] as any);\r\n    }\r\n  }\r\n\r\n  addDocumentEvents() {\r\n    if (this.disabled) return;\r\n\r\n    this.documentListeners = this.genDocumentListeners();\r\n    const keys = Object.keys(this.documentListeners);\r\n\r\n    for (const key of keys) {\r\n      document.addEventListener(key, this.documentListeners[key] as any, true);\r\n    }\r\n  }\r\n\r\n  removePopupEvents() {\r\n    if (!this.popupElement) return;\r\n\r\n    const keys = Object.keys(this.popupListeners);\r\n\r\n    for (const key of keys) {\r\n      this.popupElement.removeEventListener(key, this.popupListeners[key]);\r\n    }\r\n\r\n    this.popupListeners = {};\r\n  }\r\n\r\n  removeDocumentEvents() {\r\n    const keys = Object.keys(this.documentListeners);\r\n\r\n    for (const key of keys) {\r\n      document.removeEventListener(key, this.documentListeners[key]);\r\n    }\r\n\r\n    this.documentListeners = {};\r\n  }\r\n\r\n  genPopupListeners() {\r\n    if (this.disabled) return;\r\n\r\n    const listeners: Listeners = {};\r\n\r\n    if (!this.disabled && this.openOnHover) {\r\n      listeners.mouseenter = (e) => {\r\n        console.log(\"content mouseenter\");\r\n        // this.setActive(true);\r\n        this.runDelay(\"open\");\r\n      };\r\n\r\n      listeners.mouseleave = (e) => {\r\n        console.log(\"content mouseleave\");\r\n        // this.setActive(false);\r\n        this.runDelay(\"close\");\r\n      };\r\n    }\r\n\r\n    if (this.closeOnContentClick) {\r\n      listeners.click = (e) => {\r\n        console.log(\"content click\", e);\r\n\r\n        this.setActive(false);\r\n      };\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  genDocumentListeners() {\r\n    const listener: Listeners = {};\r\n\r\n    if (!this.openOnHover && this.closeOnOutsideClick) {\r\n      listener.click = (e) => {\r\n        if (\r\n          this.popupElement.contains(e.target as HTMLElement) ||\r\n          (this.activator && this.activator.contains(e.target as HTMLElement))\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        this.dotNetHelper.invokeMethodAsync(\"OnOutsideClick\");\r\n\r\n        if (!this.disableDefaultOutsideClickEvent) {\r\n          console.log(\"outside click: set active to false\");\r\n          this.setActive(false);\r\n        }\r\n      };\r\n    }\r\n\r\n    return listener;\r\n  }\r\n\r\n  resetPopupAndDocumentEvents(\r\n    closeOnOutsideClick: boolean,\r\n    closeOnContentClick: boolean\r\n  ) {\r\n    this.closeOnOutsideClick = closeOnOutsideClick;\r\n    this.closeOnContentClick = closeOnContentClick;\r\n\r\n    this.removePopupEvents();\r\n    this.removeDocumentEvents();\r\n\r\n    this.addPopupEvents();\r\n    this.addDocumentEvents();\r\n  }\r\n\r\n  //#endregion\r\n}\r\n\r\nfunction init(\r\n  activatorSelector: string,\r\n  disabled: boolean,\r\n  openOnClick: boolean,\r\n  openOnHover: boolean,\r\n  openOnFocus: boolean,\r\n  openDelay: number,\r\n  closeDelay: number,\r\n  dotNetHelper: DotNet.DotNetObject\r\n) {\r\n  var instance = new Activatable(\r\n    activatorSelector,\r\n    disabled,\r\n    openOnClick,\r\n    openOnHover,\r\n    openOnFocus,\r\n    openDelay,\r\n    closeDelay,\r\n    dotNetHelper\r\n  );\r\n\r\n  instance.addActivatorEvents();\r\n\r\n  return instance;\r\n}\r\n\r\nexport { init };\r\n","export default class Delayable {\n  openDelay: number;\n  closeDelay: number;\n  dotNetHelper: DotNet.DotNetObject;\n\n  openTimeout;\n  closeTimeout;\n  isActive: boolean;\n\n  constructor(\n    openDelay: number,\n    closeDelay: number,\n    dotNetHelper: DotNet.DotNetObject\n  ) {\n    this.openDelay = openDelay;\n    this.closeDelay = closeDelay;\n    this.dotNetHelper = dotNetHelper;\n  }\n\n  clearDelay() {\n    clearTimeout(this.openTimeout);\n    clearTimeout(this.closeTimeout);\n  }\n\n  runDelay(type: \"open\" | \"close\", cb?: () => void) {\n    this.clearDelay();\n\n    const delay = parseInt((this as any)[`${type}Delay`], 10);\n\n    (this as any)[`${type}Timeout`] = setTimeout(\n      cb ||\n        (() => {\n          const isActive = { open: true, close: false }[type];\n          this.setActive(isActive);\n        }),\n      delay\n    );\n  }\n\n  setActive(active: boolean) {\n    if (this.isActive == active) {\n      return;\n    }\n\n    this.isActive = active;\n    this.dotNetHelper.invokeMethodAsync(\"SetActive\", this.isActive);\n  }\n}\n","// see https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web.JS/src/Rendering/Events/EventTypes.ts\r\n// updated at 2022/08/31\r\n\r\nexport function parseMouseEvent(event: MouseEvent): Blazor.MouseEventArgs {\r\n  return {\r\n    detail: event.detail,\r\n    screenX: event.screenX,\r\n    screenY: event.screenY,\r\n    clientX: event.clientX,\r\n    clientY: event.clientY,\r\n    offsetX: event.offsetX,\r\n    offsetY: event.offsetY,\r\n    pageX: event.pageX,\r\n    pageY: event.pageY,\r\n    button: event.button,\r\n    buttons: event.buttons,\r\n    ctrlKey: event.ctrlKey,\r\n    shiftKey: event.shiftKey,\r\n    altKey: event.altKey,\r\n    metaKey: event.metaKey,\r\n    type: event.type,\r\n  } as Blazor.MouseEventArgs;\r\n}\r\n\r\nexport function parseTouchEvent(event: TouchEvent): Blazor.TouchEventArgs {\r\n  return {\r\n    detail: event.detail,\r\n    touches: parseTouch(event.touches),\r\n    targetTouches: parseTouch(event.targetTouches),\r\n    changedTouches: parseTouch(event.changedTouches),\r\n    ctrlKey: event.ctrlKey,\r\n    shiftKey: event.shiftKey,\r\n    altKey: event.altKey,\r\n    metaKey: event.metaKey,\r\n    type: event.type,\r\n  };\r\n}\r\n\r\nfunction parseTouch(touchList: TouchList): Blazor.TouchPoint[] {\r\n  const touches: Blazor.TouchPoint[] = [];\r\n\r\n  for (let i = 0; i < touchList.length; i++) {\r\n    const touch = touchList[i];\r\n    touches.push({\r\n      identifier: touch.identifier,\r\n      clientX: touch.clientX,\r\n      clientY: touch.clientY,\r\n      screenX: touch.screenX,\r\n      screenY: touch.screenY,\r\n      pageX: touch.pageX,\r\n      pageY: touch.pageY,\r\n    });\r\n  }\r\n  return touches;\r\n}\r\n\r\nexport function parseChangeEvent(event: Event): Blazor.ChangeEventArgs {\r\n  const element = event.target as Element;\r\n  if (isTimeBasedInput(element)) {\r\n    const normalizedValue = normalizeTimeBasedValue(element);\r\n    return { value: normalizedValue };\r\n  } else if (isMultipleSelectInput(element)) {\r\n    const selectElement = element as HTMLSelectElement;\r\n    const selectedValues = Array.from(selectElement.options)\r\n      .filter((option) => option.selected)\r\n      .map((option) => option.value);\r\n    return { value: selectedValues };\r\n  } else {\r\n    const targetIsCheckbox = isCheckbox(element);\r\n    const newValue = targetIsCheckbox ? !!element[\"checked\"] : element[\"value\"];\r\n    return { value: newValue };\r\n  }\r\n}\r\n\r\nfunction isTimeBasedInput(element: Element): element is HTMLInputElement {\r\n  return timeBasedInputs.indexOf(element.getAttribute(\"type\")!) !== -1;\r\n}\r\n\r\nconst timeBasedInputs = [\"date\", \"datetime-local\", \"month\", \"time\", \"week\"];\r\n\r\nfunction normalizeTimeBasedValue(element: HTMLInputElement): string {\r\n  const value = element.value;\r\n  const type = element.type;\r\n  switch (type) {\r\n    case \"date\":\r\n    case \"month\":\r\n      return value;\r\n    case \"datetime-local\":\r\n      return value.length === 16 ? value + \":00\" : value; // Convert yyyy-MM-ddTHH:mm to yyyy-MM-ddTHH:mm:00\r\n    case \"time\":\r\n      return value.length === 5 ? value + \":00\" : value; // Convert hh:mm to hh:mm:00\r\n    case \"week\":\r\n      // For now we are not going to normalize input type week as it is not trivial\r\n      return value;\r\n  }\r\n\r\n  throw new Error(`Invalid element type '${type}'.`);\r\n}\r\n\r\nfunction isMultipleSelectInput(element: Element): element is HTMLSelectElement {\r\n  return (\r\n    element instanceof HTMLSelectElement && element.type === \"select-multiple\"\r\n  );\r\n}\r\n\r\nfunction isCheckbox(element: Element | null): boolean {\r\n  return (\r\n    !!element &&\r\n    element.tagName === \"INPUT\" &&\r\n    element.getAttribute(\"type\") === \"checkbox\"\r\n  );\r\n}\r\n"],"names":["Activatable","constructor","openDelay","closeDelay","dotNetHelper","this","clearDelay","clearTimeout","openTimeout","closeTimeout","runDelay","type","cb","delay","parseInt","setTimeout","isActive","open","close","setActive","active","invokeMethodAsync","activatorSelector","disabled","openOnClick","openOnHover","openOnFocus","super","console","log","activator","document","querySelector","resetActivator","selector","resetActivatorEvents","addActivatorEvents","activatorListeners","genActivatorListeners","keys","Object","key","addEventListener","listeners","mouseenter","e","mouseleave","click","event","id","focus","stopPropagation","detail","screenX","screenY","clientX","clientY","offsetX","offsetY","pageX","pageY","button","buttons","ctrlKey","shiftKey","altKey","metaKey","blur","removeActivatorEvents","removeEventListener","runDelaying","val","registerPopup","popupSelector","closeOnOutsideClick","closeOnContentClick","disableDefaultOutsideClickEvent","popup","popupElement","addPopupEvents","addDocumentEvents","error","popupListeners","genPopupListeners","documentListeners","genDocumentListeners","removePopupEvents","removeDocumentEvents","listener","contains","target","resetPopupAndDocumentEvents","init","instance"],"mappings":"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"}
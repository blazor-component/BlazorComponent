function e(e){const n=e.target;if(function(e){return-1!==t.indexOf(e.getAttribute("type"))}(n)){const e=function(e){const t=e.value,n=e.type;switch(n){case"date":case"month":case"week":return t;case"datetime-local":return 16===t.length?t+":00":t;case"time":return 5===t.length?t+":00":t}throw new Error(`Invalid element type '${n}'.`)}(n);return{value:e}}if(function(e){return e instanceof HTMLSelectElement&&"select-multiple"===e.type}(n)){const e=n;return{value:Array.from(e.options).filter((e=>e.selected)).map((e=>e.value))}}{const e=function(e){return!!e&&"INPUT"===e.tagName&&"checkbox"===e.getAttribute("type")}(n);return{value:e?!!n.checked:n.value}}}const t=["date","datetime-local","month","time","week"];function n(t,n,o,i){if(!(t&&t instanceof HTMLInputElement))return;let a,c=!1;if(i>0){let t;a=function(a){if(!c){var l=e(a);n&&n.invokeMethodAsync("Invoke",l),clearTimeout(t),t=setTimeout((()=>{console.log("invoke debounce ~~~",a.target.value,a.target.validity,l.value),o.invokeMethodAsync("Invoke",l)}),i)}}}else a=function(t){if(!c){var i=e(t);n&&n.invokeMethodAsync("Invoke",i),console.log("invoke ~~~",t.target.value,t.target.validity,i.value),o.invokeMethodAsync("Invoke",i)}};console.log("element",t),t.addEventListener("compositionstart",(e=>c=!0)),t.addEventListener("compositionend",(e=>c=!1)),t.addEventListener("input",a)}function o(e,t){console.log("setValue",e,t),e.value=t}export{n as registerInputEvents,o as setValue};
//# sourceMappingURL=input.js.map

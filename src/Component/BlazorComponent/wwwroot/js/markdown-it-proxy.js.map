{"version":3,"file":"markdown-it-proxy.js","sources":["../../../BlazorComponent.Web/node_modules/lodash.kebabcase/index.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/common/entities.js","../../../BlazorComponent.Web/node_modules/uc.micro/categories/P/regex.js","../../../BlazorComponent.Web/node_modules/mdurl/encode.js","../../../BlazorComponent.Web/node_modules/mdurl/decode.js","../../../BlazorComponent.Web/node_modules/mdurl/parse.js","../../../BlazorComponent.Web/node_modules/mdurl/index.js","../../../BlazorComponent.Web/node_modules/mdurl/format.js","../../../BlazorComponent.Web/node_modules/uc.micro/properties/Any/regex.js","../../../BlazorComponent.Web/node_modules/uc.micro/categories/Cc/regex.js","../../../BlazorComponent.Web/node_modules/uc.micro/categories/Z/regex.js","../../../BlazorComponent.Web/node_modules/uc.micro/index.js","../../../BlazorComponent.Web/node_modules/uc.micro/categories/Cf/regex.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/common/utils.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_title.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/helpers/index.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_label.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/renderer.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/ruler.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/normalize.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/linkify.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/replacements.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/smartquotes.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/token.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/state_core.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/parser_core.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/block.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/inline.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/text_join.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/table.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/blockquote.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/hr.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/list.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/reference.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/common/html_re.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/html_block.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/common/html_blocks.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/heading.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/state_block.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/parser_block.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/code.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/fence.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/lheading.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/paragraph.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/text.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/escape.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/linkify.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/newline.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/emphasis.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/link.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/image.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/autolink.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/html_inline.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/entity.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/state_inline.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/parser_inline.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/backticks.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../../BlazorComponent.Web/node_modules/linkify-it/lib/re.js","../../../BlazorComponent.Web/node_modules/linkify-it/index.js","../../../BlazorComponent.Web/node_modules/punycode/punycode.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/index.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/presets/default.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/presets/zero.js","../../../BlazorComponent.Web/node_modules/markdown-it/lib/presets/commonmark.js","../../../BlazorComponent.Web/node_modules/markdown-it/index.js","../../../BlazorComponent.Web/node_modules/markdown-it-class/index.js","../../../BlazorComponent.Web/node_modules/markdown-it-front-matter/index.js","../../../BlazorComponent.Web/node_modules/markdown-it-header-sections/index.js","../../../BlazorComponent.Web/src/proxies/markdown-it/highlighter.ts","../../../BlazorComponent.Web/src/proxies/markdown-it/markdown-it-toc-desc.ts","../../../BlazorComponent.Web/src/proxies/markdown-it/index.ts"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","/**\n * Takes the markdown-it tokens and assigns classes to each token\n *\n * @param tokens Tokens injected by the markdown-it plugin\n * @param mapping Tag to class mapping\n */\nfunction setTokenClasses(tokens, mapping = {}) {\n  tokens.forEach((token) => {\n    /**\n     * `token.nesting` is a number referring to the nature of the tag.\n     *\n     * - `1` means the tag is opening\n     * - `0` means the tag is self-closing\n     * - `-1` means the tag is closing\n     *\n     * @see https://github.com/markdown-it/markdown-it/blob/2e31d3430187d2eee1ba120c954783eebb93b4e8/lib/token.js#L44-L53\n     **/\n    const isOpeningTag = token.nesting !== -1;\n\n    if (isOpeningTag && mapping[token.tag]) {\n      const existingClassAtr = token.attrGet('class') || '';\n\n      const existingClasses = existingClassAtr.split(' ');\n      const givenClasses = mapping[token.tag] || '';\n\n      const newClasses = [\n        ...existingClasses,\n        ...(Array.isArray(givenClasses) ? givenClasses : [givenClasses]),\n      ];\n\n      token.attrSet('class', newClasses.join(' ').trim());\n    }\n\n    // If the tag has any nested children, assign classes to those also\n    if (token.children) {\n      setTokenClasses(token.children, mapping);\n    }\n  });\n}\n\nmodule.exports = function markdownitTagClass(md, mapping = {}) {\n  md.core.ruler.push('markdownit-tag-class', (state) => {\n    setTokenClasses(state.tokens, mapping);\n  });\n};\n","// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, pos ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n","\nmodule.exports = function headerSections(md) {\n\n  function addSections(state) {\n    var tokens = [];  // output\n    var Token = state.Token;\n    var sections = [];\n    var nestedLevel = 0;\n\n    function openSection(attrs) {\n      var t = new Token('section_open', 'section', 1);\n      t.block = true;\n      t.attrs = attrs && attrs.map(function (attr) { return [attr[0], attr[1]] });  // copy\n      return t;\n    }\n\n    function closeSection() {\n      var t = new Token('section_close', 'section', -1);\n      t.block = true;\n      return t;\n    }\n\n    function closeSections(section) {\n      while (last(sections) && section.header <= last(sections).header) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeSectionsToCurrentNesting(nesting) {\n      while (last(sections) && nesting < last(sections).nesting) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeAllSections() {\n      while (sections.pop()) {\n        tokens.push(closeSection());\n      }\n    }\n\n    for (var i = 0, l = state.tokens.length; i < l; i++) {\n      var token = state.tokens[i];\n\n      // record level of nesting\n      if (token.type.search('heading') !== 0) {\n        nestedLevel += token.nesting;\n      }\n      if (last(sections) && nestedLevel < last(sections).nesting) {\n        closeSectionsToCurrentNesting(nestedLevel);\n      }\n\n      // add sections before headers\n      if (token.type == 'heading_open') {\n        var section = {\n          header: headingLevel(token.tag),\n          nesting: nestedLevel\n        };\n        if (last(sections) && section.header <= last(sections).header) {\n          closeSections(section);\n        }\n        tokens.push(openSection(token.attrs));\n        if (token.attrIndex('id') !== -1) {\n          // remove ID from token\n          token.attrs.splice(token.attrIndex('id'), 1);\n        }\n        sections.push(section);\n      }\n\n      tokens.push(token);\n    }  // end for every token\n    closeAllSections();\n\n    state.tokens = tokens;\n  }\n\n  md.core.ruler.push('header_sections', addSections);\n\n};\n\nfunction headingLevel(header) {\n  return parseInt(header.charAt(1));\n}\n\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","declare const Prism: Prism;\r\ndeclare const hljs: hljs;\r\n\r\nfunction getHighlighter() {\r\n  try {\r\n    if (Prism) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return Prism.languages[lang];\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return Prism.highlight(code, Prism.languages[lang], lang);\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  try {\r\n    if (hljs) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return hljs.getLanguage(lang);\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return hljs.highlight(code, { language: lang }).value;\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function highlight(code: string, lang: string) {\r\n  const highlighter = getHighlighter();\r\n\r\n  if (!highlighter) {\r\n    console.warn(\r\n      `Highlighter(Prismjs or Highlight.js) is required!`\r\n    );\r\n    return code;\r\n  }\r\n\r\n  if (!lang) {\r\n    return code;\r\n  }\r\n\r\n  lang = getLangCodeFromExtension(lang.toLowerCase());\r\n\r\n  if (highlighter.getLanguage(lang)) {\r\n    try {\r\n      return highlighter.highlight(code, lang);\r\n    } catch (error) {\r\n      console.error(\r\n        `Syntax highlight for language ${lang} failed.`\r\n      );\r\n      return code;\r\n    }\r\n  } else {\r\n    console.warn(\r\n      `[markdown-it-proxy] Syntax highlight for language \"${lang}\" is not supported.`\r\n    );\r\n    return code;\r\n  }\r\n}\r\n\r\nfunction getLangCodeFromExtension(extension) {\r\n  const extensionMap = {\r\n    cs: \"csharp\",\r\n    md: \"markdown\",\r\n    ts: \"typescript\",\r\n    py: \"python\",\r\n    razor: \"cshtml\",\r\n    sh: \"bash\",\r\n    yml: \"yaml\",\r\n  };\r\n\r\n  return extensionMap[extension] || extension;\r\n}","import MarkdownIt from \"markdown-it\";\nimport Token from \"markdown-it/lib/token\";\n\nexport interface MarkdownTocDescOption {\n    includeLevel: number[];\n    getTocTree?: (tree: Heading[]) => void;\n    getTocs?: (list: Heading[]) => void;\n    slugify: (hash: string) => string;\n}\n\nexport type Heading = {\n    children: Heading[];\n    content: string;\n    link: string;\n};\n\ntype HeadingDev = {\n    level: number;\n    parent: null | HeadingDev;\n    children: HeadingDev[];\n    content: string;\n    link: string;\n};\n\nfunction findHeadings(tokens: Token[], option: MarkdownTocDescOption) {\n    const headings: HeadingDev[] = [];\n    const size = tokens.length;\n    const slugify = typeof option.slugify === \"function\" ? option.slugify : (s: string) => s;\n    const includeLevel = option.includeLevel || [1,2,3,4];\n    let index = 0;\n    while (index < size) {\n        const token = tokens[index];\n        const level = +token?.tag?.substr?.(1, 1) ?? -1;\n        if (token.type === \"heading_open\" && includeLevel.indexOf(level) !== -1) {\n            const content = tokens[index + 1].content;\n            const h: HeadingDev = {\n                level,\n                content,\n                parent: null,\n                children: [],\n                link: \"#\" + slugify(content),\n            };\n            headings.push(h);\n            index += 3;\n        } else {\n            index++;\n        }\n    }\n    return headings;\n}\n\nfunction flat2Tree(headings: HeadingDev[]) {\n    let current: HeadingDev | null = null;\n    const root: HeadingDev[] = [];\n    let topLevel = 1;\n    if (headings[0]) {\n        topLevel = headings[0].level\n    }\n    for (let i = 0; i < headings.length; i++) {\n        const h = headings[i];\n        if (h.level === topLevel) {\n            root.push(h);\n            current = null;\n        }\n        if (current === null) {\n            current = h;\n        } else {\n            while (h.level !== current.level + 1) {\n                if (h.level > current.level && current.children.length !== 0) {\n                    current = current.children[current.children.length - 1];\n                } else if (h.level <= current.level && current.parent !== null) {\n                    current = current.parent;\n                } else {\n                    break;\n                }\n            }\n            if (h.level === current.level + 1) {\n                h.parent = current;\n                current.children.push(h);\n                current = h;\n            }\n        }\n    }\n    return root;\n}\n\nfunction removeUselessProperties(hsd: HeadingDev[]) {\n    for (let i = 0; i < hsd.length; i++) {\n        delete (hsd[i] as any).parent;\n        removeUselessProperties(hsd[i].children);\n    }\n}\n\nexport function MarkdownItTocDesc(md: MarkdownIt, o: MarkdownTocDescOption) {\n    md.core.ruler.push(\"toc_desc\", (state) => {\n        const headings = findHeadings(state.tokens, o);\n        if (o?.getTocs) {\n            removeUselessProperties(headings);\n            o.getTocs(headings);\n        }\n        const tree = flat2Tree(headings);\n        removeUselessProperties(tree);\n        o?.getTocTree?.(tree);\n        return true;\n    });\n}\n\n\nexport default MarkdownItTocDesc","import { Buffer } from \"buffer\";\r\nimport kebabCase from \"lodash.kebabcase\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport markdownItClass from \"markdown-it-class\";\r\nimport markdownItFrontMatter from \"markdown-it-front-matter\";\r\nimport markdownItHeaderSections from \"markdown-it-header-sections\";\r\n\r\nimport { highlight } from \"./highlighter\";\r\nimport markdownItTocDesc, { Heading, MarkdownTocDescOption } from \"./markdown-it-toc-desc\";\r\n\r\ntype MarkdownItMore = {\r\n  md: MarkdownIt;\r\n  frontMatter: {\r\n    meta?: string;\r\n    cb: (s: string) => void;\r\n  };\r\n  toc: {\r\n    headings: Heading[];\r\n    cb: (tree: Heading[]) => void;\r\n  };\r\n};\r\n\r\ntype MarkdownItMoreDict = {\r\n  [prop: string]: MarkdownItMore;\r\n};\r\n\r\nlet md: MarkdownIt = undefined;\r\n\r\nconst mdDict: MarkdownItMoreDict = {};\r\n\r\nfunction create(\r\n  options: MarkdownIt.Options = {},\r\n  tagClassMap: { [prop: string]: string[] } = {},\r\n  enableHeaderSections: boolean = false,\r\n  key: string = \"default\"\r\n) {\r\n  key ??= \"default\";\r\n\r\n  options = { ...options, highlight };\r\n\r\n  const more =\r\n    mdDict[key] ??\r\n    ({\r\n      frontMatter: {},\r\n      toc: {},\r\n    } as MarkdownItMore);\r\n\r\n  more.frontMatter.meta = undefined;\r\n  more.frontMatter.cb = (s) => {\r\n    more.frontMatter.meta = s;\r\n  };\r\n\r\n  more.toc.headings = [];\r\n  more.toc.cb = (tree) => {\r\n    more.toc.headings = tree;\r\n  };\r\n\r\n  const tocOptions: MarkdownTocDescOption = {\r\n    includeLevel: [2, 3, 4],\r\n    slugify: (s) => hashString(kebabCase(s)),\r\n    getTocs: more.toc.cb,\r\n  };\r\n\r\n  const md = new MarkdownIt(options)\r\n    .use(markdownItFrontMatter, more.frontMatter.cb)\r\n    .use(markdownItTocDesc, tocOptions);\r\n\r\n  if (enableHeaderSections) {\r\n    md.use(markdownItHeaderSections);\r\n  }\r\n\r\n  md.use(markdownItClass, tagClassMap);\r\n\r\n  more.md = md;\r\n\r\n  mdDict[key] = more;\r\n}\r\n\r\nfunction parse(src: string, key: string = \"default\") {\r\n  const { markup } = parseAll(src, key);\r\n  return markup;\r\n}\r\n\r\nfunction parseAll(src: string, key: string = \"default\") {\r\n  key ??= \"default\";\r\n\r\n  const more = mdDict[key];\r\n  more.frontMatter.meta = undefined;\r\n  more.toc.headings = [];\r\n\r\n  const markup = more.md.render(src);\r\n\r\n  return {\r\n    frontMatter: more.frontMatter.meta,\r\n    markup: markup,\r\n    toc: more.toc.headings,\r\n  };\r\n}\r\n\r\nexport function hashString(str: string) {\r\n  const encodedStr = encodeURIComponent(str);\r\n  if (encodedStr === str) {\r\n    return str;\r\n  }\r\n\r\n  let hash = window.btoa(unescape(encodedStr));\r\n  hash = hash.substring(hash.length - 5);\r\n  return hash;\r\n}\r\n\r\nexport { create, parse, parseAll, highlight };\r\n"],"names":["reAsciiWord","reLatin","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","reOptMod","rsModifier","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeGlobal","global","Object","freeSelf","self","root","Function","object","deburrLetter","key","undefined","callback","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","baseToString","value","isObjectLike","call","isSymbol","result","lodash_kebabcase","word","index","toLowerCase","string","array","iteratee","accumulator","initAccum","length","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","replace","deburr","exports","regex","encodeCache","encode","exclude","keepEscaped","i","l","code","nextCode","cache","defaultChars","ch","String","fromCharCode","push","toUpperCase","slice","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","encode_1","decodeCache","decode","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","decode_1","Url","this","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","parse","url","slashesDenoteHost","lowerProto","hec","rest","trim","split","simplePath","exec","proto","substr","atSign","hostEnd","indexOf","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","qm","u","mdurl","require$$0","require$$1","format","require$$3","uc_micro","Any","Cc","Cf","P","Z","require$$4","_hasOwnProperty","hasOwnProperty","has","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","require$$2","ucmicro","assign","obj","sources","Array","arguments","forEach","TypeError","keys","isString","_class","unescapeMd","str","unescapeAll","escaped","entity","name","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","helpers","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parseLinkDestination","ok","lines","parseLinkTitle","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","lastIndex","single","quotes","Token","map","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","state_core","_rules","tok","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","blkIdx","typographer","curr","last","Core","process","State","require$$8","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","html_re","block_names","HTML_SEQUENCES","StateBlock","s","indent","offset","indent_found","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","pop","params","mem","haveEndMarker","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","tokenize","cnt","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","Math","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","html","tmp","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","strikethrough","scanned","scanDelims","open","can_open","close","can_close","tokens_meta","isStrong","emphasis","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pending","pendingLevel","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","link","matchAtStart","pmax","ws","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","require$$6","require$$7","labelStart","ref","parseReference","lc","isLetter","_rules2","ParserInline","ruler2","require$$15","parser_inline","re","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","no_http","mailto","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","floor","stringFromCharCode","error","RangeError","mapDomain","parts","encoded","ucs2decode","output","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","utils","ParserCore","require$$5","punycode","version","ucs2","toASCII","toUnicode","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","configure","presets","missed","use","plugin","args","apply","parseInline","setTokenClasses","mapping","existingClasses","givenClasses","newClasses","markdownItClass","markdownItFrontMatter","cb","marker_str","marker_char","marker_len","marker_count","old_parent","old_line_max","start_content","auto_closed","markdownItHeaderSections","header","sections","nestedLevel","closeSection","closeSections","section","closeSectionsToCurrentNesting","charAt","attr","closeAllSections","lang","highlighter","Prism","getLanguage","languages","hljs","language","getHighlighter","console","warn","extension","cs","ts","py","razor","sh","yml","removeUselessProperties","hsd","parent","MarkdownItTocDesc","o","headings","option","size","slugify","includeLevel","_c","_a","_b","h","findHeadings","getTocs","tree","topLevel","flat2Tree","getTocTree","mdDict","create","tagClassMap","enableHeaderSections","more","frontMatter","toc","tocOptions","hashString","kebabCase","markdownItTocDesc","parseAll","encodedStr","window","btoa","unescape"],"mappings":"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"}
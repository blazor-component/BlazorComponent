@namespace BlazorComponent
@inherits BDomComponentBase
@typeparam TItem

@if (RealDisplay)
{
    <CascadingValue Value="this" Name="SelfNode">
        <div @key="NodeId" class="@CssBuilderRoot.Class" style="@Style" @onclick="async ()=> { if (HandleItemClick.HasDelegate) await HandleItemClick.InvokeAsync(DataItem);}">
            @for (int i = 0; i < TreeLevel; i++)
            {
                <div class="@CssBuilderLevel.Class"></div>
            }

            <div style="@CssProvider.GetStyle(this,"icon")">
                @if (!IsLeaf)
                {
                    <i Class="mr-3 fas @((HasChildNodes && Expanded) ? "fa-caret-down" : "fa-caret-right")" @onclick="@(() => Expanded = !Expanded)"></i>
                }
            </div>

            @if (Checkbox)
            {
                <i Class="mr-3 far @(Checked ? "fa-square" : "fa-check-square")" @onclick="OnCheckBoxClick"></i>
            }

            @Title
        </div>
    </CascadingValue>
}

<CascadingValue Value="this" Name="Node">
    @if (DataItem != null)
    {
        foreach (var item in ChildDataItems)
        {
            <SlotComponent DataItem="@item" @key="item.GetHashCode()" Description="SlotProvider.GetSlot<BTreeItem<TItem>>()"></SlotComponent>
        }
    }
    else
    {
        @Nodes
    }
</CascadingValue>
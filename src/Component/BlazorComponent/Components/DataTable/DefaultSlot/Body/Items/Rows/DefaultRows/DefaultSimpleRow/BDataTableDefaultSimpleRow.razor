@namespace BlazorComponent
@typeparam TItem
@typeparam TDataTable
@inherits ComponentPartBase<TDataTable>

@if (IsMobile)
{
    <BDataTableMobileRow @onclick="HandleOnRowClickAsync"
                         @oncontextmenu="HandleOnRowContextmenuAsync"
                        __internal_preventDefault_oncontextmenu="@OnRowContextmenuPreventDefault"
                         @ondblclick="@HandleOnRowDblClickAsync"
                         Index="Index"
                         Item="Item"
                         HasSlot="@HasSlot"
                         HeaderColContent="@HeaderColContent"
                         @key="ItemKey?.Invoke(Item)"
                         @attributes="@GetAttributes(typeof(BDataTableMobileRow<>))">
        <SlotContent>
            @if (HasExpand(context))
            {
                if (ItemDataTableExpandContent != null)
                {
                    @ItemDataTableExpandContent
                }

                <BIcon @attributes="@(GetAttributes(typeof(BIcon), "expand-icon", data: Item))">
                    @ExpandIcon
                </BIcon>
            }
            else if (HasSelect(context))
            {
                if (ItemDataTableSelectContent != null)
                {
                    @ItemDataTableSelectContent
                }
                else
                {
                    <BSimpleCheckbox @attributes="GetAttributes(typeof(BSimpleCheckbox), data: Item)"></BSimpleCheckbox>
                }
            }
            else if (HasItemColContent())
            {
                @ItemColContent!(context)
            }
        </SlotContent>
    </BDataTableMobileRow>
}
else
{
    <BDataTableRow @onclick="HandleOnRowClickAsync"
                   @oncontextmenu="HandleOnRowContextmenuAsync"
                   __internal_preventDefault_oncontextmenu="@OnRowContextmenuPreventDefault"
                   @ondblclick="HandleOnRowDblClickAsync"
                   Index="Index"
                   Item="Item"
                   HasSlot="@HasSlot"
                   @key="ItemKey?.Invoke(Item)"
                   @attributes="@GetAttributes(typeof(BDataTableRow<>))">
        <SlotContent>
            @if (HasExpand(context))
            {
                if (ItemDataTableExpandContent != null)
                {
                    @ItemDataTableExpandContent
                }

                <BIcon @attributes="@(GetAttributes(typeof(BIcon), "expand-icon", data: Item))">
                    @ExpandIcon
                </BIcon>
            }
            else if (HasSelect(context))
            {
                if (ItemDataTableSelectContent != null)
                {
                    @ItemDataTableSelectContent
                }
                else
                {
                    <BSimpleCheckbox @attributes="@GetAttributes(typeof(BSimpleCheckbox), data: Item)"></BSimpleCheckbox>
                }
            }
            else if (HasItemColContent())
            {
                @ItemColContent!(context)
            }
        </SlotContent>
    </BDataTableRow>
}

@namespace BlazorComponent
@typeparam TItem
@typeparam TDataTable
@inherits ComponentPartBase<TDataTable>

<BDataTableRowGroup Value="IsOpen" @attributes="GetAttributes(typeof(BDataTableRowGroup))">
    <ColumnHeaderContent>
        @if (GroupHeaderContent != null)
        {
            @GroupHeaderContent
        }
        else
        {
            <td class="@CssProvider.GetClass("group-header")" @attributes="@ColspanAttrs">
                <BButton @attributes="@(GetAttributes(typeof(BButton), "group-toggle", data: Group.Key))">
                    <BIcon @attributes="@(GetAttributes(typeof(BIcon), "group-toggle-icon"))">
                        @(IsOpen ? GroupMinusIcon : GroupPlusIcon)
                    </BIcon>
                </BButton>
                @($"{GetText(Options.GroupBy[0])}: {Group.Key}")
                <BButton @attributes="@(GetAttributes(typeof(BButton), "group-remove"))">
                    <BIcon @attributes="@(GetAttributes(typeof(BIcon), "group-remove-icon"))">
                        @GroupCloseIcon
                    </BIcon>
                </BButton>
            </td>
        }
    </ColumnHeaderContent>
    <RowContentContent>
        @RenderPart(typeof(BDataTableRows<,>), Group, arg0Name: "Items")
    </RowContentContent>
</BDataTableRowGroup>

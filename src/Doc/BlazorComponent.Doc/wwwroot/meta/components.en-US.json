[
  {
    "Title": "Overview",
    "Type": "Overview",
    "Desc": "<p><code>Ant Design Blazor</code> provides plenty of UI components to enrich your web applications, and we will improve components experience consistently. We also recommand some great Third-Party Libraries additionally.</p>\n",
    "ApiDoc": "",
    "DemoList": [
      {
        "Order": 0,
        "Name": "overview",
        "Title": "Overview",
        "Description": "",
        "Code": "@using BlazorComponent.Doc.CLI.Models\r\n@using BlazorComponent.Doc.Services\r\n\r\n\r\n<Divider />\r\n\r\n<AntDesign.Input TValue=\"string\" Class=\"components-overview-search\" Placeholder=\"@LanguageService.Resources[\"app.components.overview.search\"]\" OnInput=\"@(args => OnSearchEnter(args.Value?.ToString()))\">\r\n    <Suffix>\r\n        <Icon Type=\"search\" />\r\n    </Suffix>\r\n</AntDesign.Input>\r\n\r\n<Divider />\r\n\r\n@foreach (var menuGroup in menuItems)\r\n{\r\n    if (menuGroup.Order == -1)\r\n    {\r\n        continue;\r\n    }\r\n\r\n    <div class=\"components-overview\">\r\n        <AntDesign.Title Level=\"2\">\r\n            <Space Align=\"center\">\r\n                <SpaceItem>@menuGroup.Title</SpaceItem>\r\n                <SpaceItem>\r\n                    <Tag Style=\"display: block;\">@(menuGroup.Children?.Length ?? 0)</Tag>\r\n                </SpaceItem>\r\n            </Space>\r\n        </AntDesign.Title>\r\n\r\n        <Row>\r\n            @foreach (var item in menuGroup.Children)\r\n            {\r\n                <AntDesign.Col Xl=\"6\" Lg=\"8\" Sm=\"12\" Xs=\"24\" Style=\"padding:12px\">\r\n                    <a href=@($\"/{CurrentLanguage}/{item.Url}\")>\r\n                        <Card Bordered Title=\"@($\"{item.Title} {@item.SubTitle}\")\" Hoverable>\r\n                            <Body>\r\n                                <div class=\"components-overview-img\">\r\n                                    <img src=\"@item.Cover\" alt=\"@(item.Title)\">\r\n                                </div>\r\n                            </Body>\r\n                        </Card>\r\n                    </a>\r\n                </AntDesign.Col>\r\n            }\r\n        </Row>\r\n    </div>\r\n}\r\n\r\n@inject ILanguageService LanguageService\r\n@inject DemoService demoService\r\n\r\n@code{\r\n\r\n    private string CurrentLanguage => LanguageService.CurrentCulture.Name;\r\n    DemoMenuItemModel[] menuItems = { };\r\n\r\n    protected override bool ShouldRender() => menuItems.Any();\r\n\r\n    protected override async Task OnInitializedAsync()\r\n    {\r\n        var menu = await demoService.GetMenuAsync();\r\n        menuItems = menu.FirstOrDefault(x => x.Url.ToLowerInvariant() == \"components\")?.Children ?? Array.Empty<DemoMenuItemModel>();\r\n\r\n        LanguageService.LanguageChanged += async (sender, args) =>\r\n        {\r\n            var menu = await demoService.GetMenuAsync();\r\n            menuItems = menu.FirstOrDefault(x => x.Url.ToLowerInvariant() == \"components\")?.Children ?? Array.Empty<DemoMenuItemModel>();\r\n\r\n            await InvokeAsync(StateHasChanged);\r\n        };\r\n    }\r\n\r\n    private async Task OnSearchEnter(string value)\r\n    {\r\n        var menu = await demoService.GetMenuAsync();\r\n        menuItems = menu.FirstOrDefault(x => x.Url.ToLowerInvariant() == \"components\")?.Children ?? Array.Empty<DemoMenuItemModel>();\r\n\r\n        if (string.IsNullOrWhiteSpace(value))\r\n        {\r\n            return;\r\n        }\r\n\r\n        IList<DemoMenuItemModel> result = new List<DemoMenuItemModel>();\r\n\r\n        foreach (var item in menuItems)\r\n        {\r\n            var lst = item.Children.Where(x => x.Title.Contains(value, StringComparison.OrdinalIgnoreCase)).ToArray();\r\n\r\n            if (lst.Any())\r\n            {\r\n                result.Add(new DemoMenuItemModel()\r\n                {\r\n                    Title = item.Title,\r\n                    SubTitle = item.SubTitle,\r\n                    Order = item.Order,\r\n                    Type = item.Type,\r\n                    Children = lst,\r\n                });\r\n            }\r\n        }\r\n\r\n        menuItems = result.ToArray();\r\n    }\r\n}",
        "Type": "Demos.Components.Overview.demo.Overview",
        "Style": "",
        "Docs": true,
        "Debug": false
      }
    ]
  }
]